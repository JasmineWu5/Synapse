train_files:
  - ./output/*/fold_0.root

val_files:
  - ./output/*/fold_1.root

test_files:
  - ./output/*/fold_2.root

train_load_range: [0.0, 1.0]
train_normalized_range: true
val_load_range: [0.0, 1.0]
val_normalized_range: true
test_load_range: [0.0, 1.0]
test_normalized_range: true

tree_name: sr

new_variables:
  log1p_pt: "np.log1p(pt)"
  log1p_e: "np.log1p(e)"
  px: "pt * np.cos(phi)"
  py: "pt * np.sin(phi)"
  pz: "pt * np.sinh(eta)"
  abs_weight: "np.abs(weight)"
  log1p_HT_vis: "np.log1p(HT_vis)"
  log1p_HT_lep: "np.log1p(HT_lep)"
  log1p_HT_jet: "np.log1p(HT_jet)"
  log1p_HT_lepMET: "np.log1p(HT_lepMET)"
  log1p_HT_m_all: "np.log1p(m_all)"


selection:

inputs:
  obj_feats:
    - log1p_pt
    - eta
    - phi
    - log1p_e
    - pdg
    - charge
  evt_feats:
    - log1p_HT_vis
    - log1p_HT_lep
    - log1p_HT_jet
    - log1p_HT_lepMET
    - log1p_HT_m_all
    - dilep_type
  obj_4vecs:
    - px
    - py
    - pz
    - e
  mask:
    - valid


labels:
  categorical:
    - label_signal
    - label_background


spectators:
  - eventNumber
  - dsid
  - xgb_score


weights:
  balance_weights: true
  weight_balance_factors:  # corresponds to the order of the categorical labels
    - 1710.4
    - 1.0
  vars:
    - abs_weight